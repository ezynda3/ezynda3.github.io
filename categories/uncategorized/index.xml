<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uncategorized on Ed Zynda - Coder, Hacker, Superhero</title>
    <link>http://www.edzynda.com/categories/uncategorized/</link>
    <description>Recent content in Uncategorized on Ed Zynda - Coder, Hacker, Superhero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2016 Ed Zynda.</copyright>
    <lastBuildDate>Fri, 27 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.edzynda.com/categories/uncategorized/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Personal Laravel Application Starter</title>
      <link>http://www.edzynda.com/my-personal-laravel-application-starter/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/my-personal-laravel-application-starter/</guid>
      <description>Frameworks make it easy to hit the ground running when writing web apps. The one hurdle I run into consistently when starting any app though is creating a base user authentication system. It&amp;rsquo;s pretty simple to do with most modern frameworks like Laravel but it&amp;rsquo;s also just an annoying boilerplate task. This is just one of many boilerplate tasks that I&amp;rsquo;ve decided to eliminate by creating a basic starter app that I can pull from GitHub and modify from there.</description>
    </item>
    
    <item>
      <title>Using Faker To Populate Your Laravel Projects During Development</title>
      <link>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</link>
      <pubDate>Fri, 20 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</guid>
      <description>I&amp;rsquo;m a very visual person so when I&amp;rsquo;m developing something, I like see and interact with my projects exactly how I would if it was in the production stage. The problem is, I don&amp;rsquo;t have a handful of test users on call to register on my test application and start using it. Laravel already has an easy way to populate your databases with users and other data but there&amp;rsquo;s still some manual data entry involved.</description>
    </item>
    
  </channel>
</rss>