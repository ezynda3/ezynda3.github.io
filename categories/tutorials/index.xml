<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Ed Zynda - Coder, Hacker, Superhero</title>
    <link>http://www.edzynda.com/categories/tutorials/</link>
    <description>Recent content in Tutorials on Ed Zynda - Coder, Hacker, Superhero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2016 Ed Zynda.</copyright>
    <lastBuildDate>Fri, 20 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.edzynda.com/categories/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Continuous Integration With Jenkins Part II</title>
      <link>http://www.edzynda.com/continuous-integration-with-jenkins-part-ii/</link>
      <pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/continuous-integration-with-jenkins-part-ii/</guid>
      <description>In the first part of this series, I showed you how you can easily set up a project to run automated tests using Jenkins. The quickest and easiest way to build your project and run tests is to add a build step that runs a bunch of shell commands. This is fine for small projects but what about larger projects with complex build steps and dependencies?
A better options is to use another tool to automate the build process and perform certain tasks dynamically.</description>
    </item>
    
    <item>
      <title>Continuous Integration With Jenkins Part I</title>
      <link>http://www.edzynda.com/continuous-integration-with-jenkins-part-i/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/continuous-integration-with-jenkins-part-i/</guid>
      <description>Continuous integration or CI, is all the rage these days. If you&amp;rsquo;re not familiar with what CI is, it&amp;rsquo;s basically a methodology for rapidly developing, testing and deploying applications. Using a well configured CI setup or pipeline, a developer or team of developers can make a change to their codebase, test those changes to make sure they didn&amp;rsquo;t break those changes and then push that code live in a matter of minutes.</description>
    </item>
    
    <item>
      <title>Create A Simple PHP Command Line Tool</title>
      <link>http://www.edzynda.com/create-a-simple-php-command-line-tool/</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-simple-php-command-line-tool/</guid>
      <description>PHP is no doubt a great fit for building web applications but it also has the ability to create powerful command line applications. PHP has had this ability for a long time but recently there has been some excellent work done in order to improve the quality of PHP command line tools. The Symfony\Console component makes it incredibly easy to create a command line application that accepts different arguments and options.</description>
    </item>
    
    <item>
      <title>Easily Post To Twitter Using Codebird</title>
      <link>http://www.edzynda.com/easily-post-to-twitter-using-codebird/</link>
      <pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/easily-post-to-twitter-using-codebird/</guid>
      <description>Recently I needed to add some social media functionality to a project. I needed to be able to post to Twitter and Facebook whenever a user created a new item in the web app. I had never done this before in PHP because normally I would use some sort of plugin in WordPress to do this. Since this was not a WordPress site, I needed to do it by hand. Luckily this isn&amp;#8217;t as hard as you might think.</description>
    </item>
    
    <item>
      <title>Build a Minimalist WYSIWYG HTML Editor With WYSIHTML5</title>
      <link>http://www.edzynda.com/build-a-minimalist-wysiwyg-html-editor-with-wysihtml5/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/build-a-minimalist-wysiwyg-html-editor-with-wysihtml5/</guid>
      <description>For a lot of HTML forms you really don&amp;rsquo;t need much more than the basic form fields that HTML provides. For some projects however you might need a little more. If you want your users to be able to add some styling, formatting or links you&amp;rsquo;re likely to use a third party editor like CKEditor or TinyMCE. Both of these are fine if you need all of the cool features they provide but sometimes those are overkill.</description>
    </item>
    
    <item>
      <title>Using Faker To Populate Your Laravel Projects During Development</title>
      <link>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</link>
      <pubDate>Fri, 20 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</guid>
      <description>I&amp;rsquo;m a very visual person so when I&amp;rsquo;m developing something, I like see and interact with my projects exactly how I would if it was in the production stage. The problem is, I don&amp;rsquo;t have a handful of test users on call to register on my test application and start using it. Laravel already has an easy way to populate your databases with users and other data but there&amp;rsquo;s still some manual data entry involved.</description>
    </item>
    
    <item>
      <title>Javascript Promises Explained</title>
      <link>http://www.edzynda.com/javascript-promises-explained/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/javascript-promises-explained/</guid>
      <description>While reading about different Javascript frameworks and utilities, I kept running across a design patter or technique called &amp;lsquo;promises&amp;rsquo;. It seems every shiny new Javascript thing utilizes them in some way or another. At first the concept seemed difficult to wrap my head around but eventually it clicked. It isn&amp;rsquo;t really as difficult as I thought.
Javascript as well as other modern languages uses a what are called callback functions. These are functions passed as arguments to other functions and are used to do something with the data that the top level function returns.</description>
    </item>
    
    <item>
      <title>Working With Queues Using PHP And Beanstalkd</title>
      <link>http://www.edzynda.com/working-with-queues-using-php-and-beanstalkd/</link>
      <pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/working-with-queues-using-php-and-beanstalkd/</guid>
      <description>PHP is often considered the glue of the Internet because it&amp;rsquo;s can be used for a lot of different things. There are so many built in functions and features that you are unlikely to use close to all of them if you work with PHP the rest of your life. This is great because we can solve various problems in our web apps without resorting to bringing in another language. Sometimes though, our application logic can get quite large or resource intensive.</description>
    </item>
    
    <item>
      <title>Create A Self-destructing, Encrypted Message App In Laravel Part 2</title>
      <link>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-2/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-2/</guid>
      <description>&lt;p&gt;The first thing we&amp;rsquo;ll need to do is create a default layout. This is the layout that the rest of our views will extend. Let&amp;rsquo;s save it as &amp;lsquo;app/views/layouts/default.blade.php&amp;rsquo;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create A Self-destructing, Encrypted Message App In Laravel Part 1</title>
      <link>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-1/</link>
      <pubDate>Fri, 15 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-1/</guid>
      <description>The Internet is the wild west these days. With hackers, scammers and even governments gathering our personal communications, you may have become pretty paranoid about what you post online these days. In response to all this paranoia, there have been several offerings from online applications to SaaS services claiming to improve your security and protect your data online. I wouldn&amp;rsquo;t say that I fall into the paranoid category but security, anonymity and cryptography fascinate me.</description>
    </item>
    
    <item>
      <title>What Is A Microframework? Getting Started With Silex</title>
      <link>http://www.edzynda.com/what-is-a-microframework-getting-started-with-silex/</link>
      <pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/what-is-a-microframework-getting-started-with-silex/</guid>
      <description>There is no shortage of coding frameworks these days. I can&amp;rsquo;t scroll through my twitter and facebook feeds or my favorite dev forums without stumbling upon something new. Like a hungry barracuda, I&amp;rsquo;m instantly attracted to new shiny things. While browsing reddit.com/r/php I came across a mention of a microframework called Silex. Now you may be wondering what a microframework is. I was wondering the same thing, so I took a look at the project&amp;rsquo;s website to figure out for myself.</description>
    </item>
    
    <item>
      <title>Using The PHP Built-in Webserver</title>
      <link>http://www.edzynda.com/using-the-php-built-in-webserver/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-the-php-built-in-webserver/</guid>
      <description>For years Ruby and Python have been stealing the show with innovative features and functionality to help developers get their projects off the ground. PHP was left in the dust for quite a while. One simple but invaluable feature that PHP had been lacking was it&amp;rsquo;s own webserver. Since version 5.4 however, PHP developers can now enjoy this modern convenience.
Not all backend developers are system administrators. They know how to code and code well.</description>
    </item>
    
    <item>
      <title>What Is An IoC Container?</title>
      <link>http://www.edzynda.com/what-is-an-ioc-container/</link>
      <pubDate>Wed, 06 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/what-is-an-ioc-container/</guid>
      <description>If you&amp;#8217;re discussing object oriented programming in PHP these days, it&amp;#8217;s likely that you&amp;#8217;ve at least heard about such topics as dependency injection or IoC containers. They&amp;#8217;re both pretty useful tools for coding and testing your code. What exactly is an IoC container though? It sounds pretty complicated but it&amp;#8217;s really not.
If you read my earlier post on using repositories in Laravel you might have noticed that when using dependency injection in our __construct method, we didn&amp;#8217;t have to actually instantiate our repository.</description>
    </item>
    
    <item>
      <title>Using Hooks In WordPress</title>
      <link>http://www.edzynda.com/using-hooks-in-wordpress/</link>
      <pubDate>Mon, 04 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-hooks-in-wordpress/</guid>
      <description>Every so often I have clients who want me to work on WordPress sites or plugins. I honestly hate working with WordPress. While it&amp;#8217;s one of the most popular CMS products in the world with a massive developer base, I find that anything coded for WordPress tends to follow a tacky and poorly organized form of coding. Coding styles vary wildly from developer to developer and there really is no standard.</description>
    </item>
    
    <item>
      <title>Using Repositories In Laravel</title>
      <link>http://www.edzynda.com/using-repositories-in-laravel/</link>
      <pubDate>Fri, 18 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-repositories-in-laravel/</guid>
      <description>The past couple of days I have been cramming my brain with coding knowledge. I&amp;#8217;m working on a side project that I&amp;#8217;ll likely announce in detail as it gets closer to launch. Since I&amp;#8217;m starting from an empty Laravel project and building it from the ground up, I&amp;#8217;m learning quite a bit about the framework and even some of the new features in PHP 5.4 and above.
One technique I&amp;#8217;m starting to better understand is that of dependency injection.</description>
    </item>
    
    <item>
      <title>Using Route/Model Binding In Laravel</title>
      <link>http://www.edzynda.com/using-routemodel-binding-in-laravel/</link>
      <pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-routemodel-binding-in-laravel/</guid>
      <description>As I work more and more with Laravel, I keep running across some really cool time saving tricks. One of those time savers is route/model binding.
Let&amp;#8217;s say that you have the following route setup.
&amp;lt;?php Route::get(&#39;books/{book}&#39;, function($book) { return Book::find($book); });  That&amp;#8217;s pretty simple right? Basically you point your browser at /books and then pass a book id and then use the &amp;#8216;Book&amp;#8217; model to fetch that book from the database.</description>
    </item>
    
    <item>
      <title>Simple Image Manipulation With Intervention Image</title>
      <link>http://www.edzynda.com/simple-image-manipulation-with-intervention-image/</link>
      <pubDate>Fri, 27 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/simple-image-manipulation-with-intervention-image/</guid>
      <description>A lot of web applications include some sort of photo uploading functionality. Whether it&amp;#8217;s allowing a user to upload a personal avatar or to create and manage an entire photo gallery with watermarking features, it&amp;#8217;s somewhat of a pain to code. PHP includes several built-in functions for accomplishing this using the GD library but they&amp;#8217;re cumbersome at best. Luckily someone else feels your pain and has written a class that makes it a snap to work with images.</description>
    </item>
    
    <item>
      <title>Use Laravel&#39;s Eloquent ORM Outside Of Laravel</title>
      <link>http://www.edzynda.com/use-laravels-eloquent-orm-outside-of-laravel/</link>
      <pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/use-laravels-eloquent-orm-outside-of-laravel/</guid>
      <description>Working with databases in Laravel is ridiculously easy thanks to Eloquent. Eloquent allows you to map database tables as simple model objects that include various methods for retrieving and updating the database. While working on other people&amp;rsquo;s code, however, I&amp;rsquo;m usually not lucky enough to be working with something as enjoyable as Laravel. Thankfully Laravel is written in such a way that some of it&amp;rsquo;s key components can be used as stand-alone modules.</description>
    </item>
    
    <item>
      <title>Getting Started With Laravel 4 and Vagrant</title>
      <link>http://www.edzynda.com/getting-started-with-laravel-4-and-vagrant/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/getting-started-with-laravel-4-and-vagrant/</guid>
      <description>I&amp;rsquo;ve worked with a handful of different PHP frameworks over the years. From ZEND Framework to Codeigniter, all have their pros and cons. Some of them are more difficult to work with than others. None of them, however, have been more enjoyable for me to work with than Laravel.
I came across Laravel while randomly browsing the web. I don&amp;rsquo;t even remember what I was looking for but after reading more about Laravel and how simple it was to setup, I was hooked.</description>
    </item>
    
  </channel>
</rss>