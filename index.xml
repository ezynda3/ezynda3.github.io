<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ed Zynda - Coder, Hacker, Superhero</title>
    <link>http://www.edzynda.com/</link>
    <description>Recent content on Ed Zynda - Coder, Hacker, Superhero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2016 Ed Zynda.</copyright>
    <lastBuildDate>Wed, 28 Jun 2017 20:36:00 -0700</lastBuildDate>
    
	<atom:link href="http://www.edzynda.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create Your Own Cryptcurrency On Ethereum Part 1</title>
      <link>http://www.edzynda.com/create-your-own-cryptcurrency-on-ethereum-part-1/</link>
      <pubDate>Wed, 28 Jun 2017 20:36:00 -0700</pubDate>
      
      <guid>http://www.edzynda.com/create-your-own-cryptcurrency-on-ethereum-part-1/</guid>
      <description>In this video, I show you just how easy it is to create your own custom token on the Ethereum blockchain. I also explain ERC20, the standard that most custom tokens follow.
  </description>
    </item>
    
    <item>
      <title>Ethereum Smart Contracts In Solidity Part 5</title>
      <link>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-5/</link>
      <pubDate>Mon, 26 Jun 2017 19:34:00 -0700</pubDate>
      
      <guid>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-5/</guid>
      <description>In this video I go over using external libraries in Solidity.
  </description>
    </item>
    
    <item>
      <title>Getting Started With Vue Router</title>
      <link>http://www.edzynda.com/getting-started-with-vue-router/</link>
      <pubDate>Tue, 20 Jun 2017 19:26:44 -0700</pubDate>
      
      <guid>http://www.edzynda.com/getting-started-with-vue-router/</guid>
      <description>I wrote a nice little tutorial on getting started with Vue Router. Check it out over at Scotch.io.</description>
    </item>
    
    <item>
      <title>Ethereum Smart Contracts In Solidity Part 4</title>
      <link>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-4/</link>
      <pubDate>Tue, 20 Jun 2017 19:19:17 -0700</pubDate>
      
      <guid>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-4/</guid>
      <description>In this video I show you how to make Ethereum contracts talk to other contracts.
  </description>
    </item>
    
    <item>
      <title>Ethereum Smart Contracts In Solidity Part 3</title>
      <link>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-3/</link>
      <pubDate>Sun, 18 Jun 2017 16:10:59 -0700</pubDate>
      
      <guid>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-3/</guid>
      <description>In this video I go over the concept of contract inheritance and how we can build upon an existing contract to create entirely new contracts. I also discuss abstract functions and interfaces.
  </description>
    </item>
    
    <item>
      <title>Ethereum Smart Contracts In Solidity Part 2</title>
      <link>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-2/</link>
      <pubDate>Fri, 16 Jun 2017 18:57:30 -0700</pubDate>
      
      <guid>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-2/</guid>
      <description>In this video I go over how you can accept funds through your contract using &amp;ldquo;payable&amp;rdquo; functions. I also cover how to destroy a contract and transfer its balance once it is no longer useful to exist on the blockchain.
  </description>
    </item>
    
    <item>
      <title>Ethereum Smart Contracts In Solidity Part 1</title>
      <link>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-1/</link>
      <pubDate>Thu, 15 Jun 2017 19:06:10 -0700</pubDate>
      
      <guid>http://www.edzynda.com/ethereum-smart-contracts-in-solidity-part-1/</guid>
      <description>In this tutorial, I show you the basics of Ethereum smart contracts and explain state variables, functions, modifiers and events.
  </description>
    </item>
    
    <item>
      <title>Create Your First Ethereum Smart Contract In Solidity</title>
      <link>http://www.edzynda.com/create-your-first-ethereum-smart-contract-in-solidity/</link>
      <pubDate>Wed, 14 Jun 2017 19:09:39 -0700</pubDate>
      
      <guid>http://www.edzynda.com/create-your-first-ethereum-smart-contract-in-solidity/</guid>
      <description>I recently started a YouTube channel for posting some tutorials. Check out my latest video on creating Ethereum smart contracts.
  </description>
    </item>
    
    <item>
      <title>Single Executable Web Apps With Go Binary Assets</title>
      <link>http://www.edzynda.com/single-executable-web-apps-with-go-binary-assets/</link>
      <pubDate>Thu, 05 Jan 2017 07:52:54 -0800</pubDate>
      
      <guid>http://www.edzynda.com/single-executable-web-apps-with-go-binary-assets/</guid>
      <description>&lt;p&gt;Go is becoming increasingly popular with building web applications. It&amp;rsquo;s fast, lightweight and easy to learn. Another great feature is to compile your applications into a single redistributable binary. A lot of web applications depend on external assets, however. For the application to work you still need to package your css, JavaScript and image files along with the executable. Let&amp;rsquo;s see if we can fix this.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How Easy Is It To Containerize A Go App?</title>
      <link>http://www.edzynda.com/how-easy-is-it-to-containerize-a-go-app/</link>
      <pubDate>Tue, 27 Dec 2016 09:18:06 -0800</pubDate>
      
      <guid>http://www.edzynda.com/how-easy-is-it-to-containerize-a-go-app/</guid>
      <description>Recently, I wrote an article on how to create a simple chat server using WebSockets and Go. I made the source code available and it&amp;rsquo;s pretty simple to get the example up and running if you have a basic familiarization with Go. I wanted to see if I could make it easier for people to try out though. For this, I looked to the very popular Docker project.
Docker has been around for quite some time but, I only recently began toying around with it more seriously.</description>
    </item>
    
    <item>
      <title>Single Page Web App With Go And Vue</title>
      <link>http://www.edzynda.com/single-page-web-app-with-go-and-vue/</link>
      <pubDate>Wed, 07 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/single-page-web-app-with-go-and-vue/</guid>
      <description>I wrote a nice little tutorial on creating a single page web application using Go and VueJS. Check it out over at Scotch.io.</description>
    </item>
    
    <item>
      <title>Test The Untestable With AspectMock</title>
      <link>http://www.edzynda.com/test-the-untestable-with-aspectmock/</link>
      <pubDate>Tue, 26 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/test-the-untestable-with-aspectmock/</guid>
      <description>Some of us have had the pleasure of working with someone else&amp;rsquo;s ancient codebase to either add new features or fix bugs. It&amp;rsquo;s never fun and usually a pain. Because of the design (or lack thereof) of the application, it doesn&amp;rsquo;t lend itself to unit testing. The code is littered with static method calls, objects instantiated inside methods rather than being injected through a constructor, and other elements of poor design.</description>
    </item>
    
    <item>
      <title>Simplify PHP Configs With Environment Variables</title>
      <link>http://www.edzynda.com/simplify-php-configs-with-environment-variables/</link>
      <pubDate>Wed, 13 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/simplify-php-configs-with-environment-variables/</guid>
      <description>Laravel 5 and above icludes a cool feature to help simplify configuration and deployment to different environments. Before you had to create separate directories within &amp;lsquo;app/config&amp;rsquo; to separate configuration based on the environment. You would then use varying methods to tell Laravel which environment it was in a bootstrap file. This can get pretty messy real quick epecially if you are adding third party libraries that may require some special configuration options.</description>
    </item>
    
    <item>
      <title>Running AJAX Requests Sequentially</title>
      <link>http://www.edzynda.com/running-ajax-requests-sequentially/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/running-ajax-requests-sequentially/</guid>
      <description>Somewhat recently, I was refactoring a project that was having issues uploading and importing large CSV files. I was running into all kinds of issues from timeout errors to memory allocation exceptions. The solution was to break up the import and upload it in chunks. This alone was pretty easy but I also wanted to include the ability to display the progress of the entire import. The problem was, I was using AJAX to upload the data.</description>
    </item>
    
    <item>
      <title>New Book: Aspect-Oriented Programming in PHP</title>
      <link>http://www.edzynda.com/new-book-aspect-oriented-programming-in-php/</link>
      <pubDate>Sat, 20 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/new-book-aspect-oriented-programming-in-php/</guid>
      <description>I&amp;rsquo;ve been looking for a way to challenge myself as well as showcase some of my knowledge to the world. After some thinking, I&amp;rsquo;ve decided that I would go ahead and write a book.
I&amp;rsquo;ve been reading a lot about aspect-oriented programming and really like what it provides to enhance object-oriented programming. There isn&amp;rsquo;t a lot of information about this in the PHP community so I figured a book would be a great way to drum up some more interest and help create a larger community around the subject of AOP.</description>
    </item>
    
    <item>
      <title>Aspect Oriented PHP Using Go! AOP Framework</title>
      <link>http://www.edzynda.com/aspect-oriented-php-using-go-aop-framework/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/aspect-oriented-php-using-go-aop-framework/</guid>
      <description>In my last article we took a look at using aspect oriented programming (AOP) in PHP by installing the excellent AOP PECL extension for PHP. This is great if you have admin access to the servers you run your code on. It&amp;rsquo;s very common though, for people to run their code on shared hosting. These types of providers don&amp;rsquo;t usually provide a way for you to install any extra PHP extensions besides the common extensions they provide.</description>
    </item>
    
    <item>
      <title>Aspect Oriented PHP And The Interceptor Pattern</title>
      <link>http://www.edzynda.com/aspect-oriented-php-and-the-interceptor-pattern/</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/aspect-oriented-php-and-the-interceptor-pattern/</guid>
      <description>There are many ways to modify the behavior of existing code with actually changing the core logic. Some patterns you might be familiar with are the decorator pattern or the observer pattern. Both allow you to take another object and modify the behavior by wrapping your modifcations around the original code. One pattern you might not be familiar with though, is the interceptor pattern.
The interceptor pattern is a core concept of what is called aspect oriented programming (AOP).</description>
    </item>
    
    <item>
      <title>Simple Environment Variable Based Feature Toggles</title>
      <link>http://www.edzynda.com/simple-environment-variable-based-feature-toggles/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/simple-environment-variable-based-feature-toggles/</guid>
      <description>There&amp;rsquo;s a lot of talk about continuous delivery in software development these days. One core concept of continuous delivery is &amp;ldquo;Deploy early and deploy often.&amp;rdquo; Rather than deploy an entire application once it&amp;rsquo;s complete, you should be pushing many small features as they come. There are many benefits to this but it isn&amp;rsquo;t without risk.
Using a software version controll system like git can make working on code in teams easy but can just as easily turn into a nightmare when there are too many active branches from the master branch in the repository.</description>
    </item>
    
    <item>
      <title>7 Exciting Changes Coming to Magento 2</title>
      <link>http://www.edzynda.com/7-exciting-changes-coming-to-magento-2/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/7-exciting-changes-coming-to-magento-2/</guid>
      <description>E-commerce is not my favorite thing to write code for and as such, I&amp;rsquo;m no expert. I was actually thrown into the world of e-commerce customizations when I started working for my current employer a little over a year ago. The very first project I was assigned to start coding for was built using Magento. While I had heard of it, I knew little to nothing about it except that it wasn&amp;rsquo;t called &amp;ldquo;Magneto&amp;rdquo; which is what I originally thought when I first glanced at the name.</description>
    </item>
    
    <item>
      <title>Continuous Integration With Jenkins Part II</title>
      <link>http://www.edzynda.com/continuous-integration-with-jenkins-part-ii/</link>
      <pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/continuous-integration-with-jenkins-part-ii/</guid>
      <description>In the first part of this series, I showed you how you can easily set up a project to run automated tests using Jenkins. The quickest and easiest way to build your project and run tests is to add a build step that runs a bunch of shell commands. This is fine for small projects but what about larger projects with complex build steps and dependencies?
A better options is to use another tool to automate the build process and perform certain tasks dynamically.</description>
    </item>
    
    <item>
      <title>Continuous Integration With Jenkins Part I</title>
      <link>http://www.edzynda.com/continuous-integration-with-jenkins-part-i/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/continuous-integration-with-jenkins-part-i/</guid>
      <description>Continuous integration or CI, is all the rage these days. If you&amp;rsquo;re not familiar with what CI is, it&amp;rsquo;s basically a methodology for rapidly developing, testing and deploying applications. Using a well configured CI setup or pipeline, a developer or team of developers can make a change to their codebase, test those changes to make sure they didn&amp;rsquo;t break those changes and then push that code live in a matter of minutes.</description>
    </item>
    
    <item>
      <title>Create A Simple PHP Command Line Tool</title>
      <link>http://www.edzynda.com/create-a-simple-php-command-line-tool/</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-simple-php-command-line-tool/</guid>
      <description>PHP is no doubt a great fit for building web applications but it also has the ability to create powerful command line applications. PHP has had this ability for a long time but recently there has been some excellent work done in order to improve the quality of PHP command line tools. The Symfony\Console component makes it incredibly easy to create a command line application that accepts different arguments and options.</description>
    </item>
    
    <item>
      <title>Easily Post To Twitter Using Codebird</title>
      <link>http://www.edzynda.com/easily-post-to-twitter-using-codebird/</link>
      <pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/easily-post-to-twitter-using-codebird/</guid>
      <description>Recently I needed to add some social media functionality to a project. I needed to be able to post to Twitter and Facebook whenever a user created a new item in the web app. I had never done this before in PHP because normally I would use some sort of plugin in WordPress to do this. Since this was not a WordPress site, I needed to do it by hand. Luckily this isn&amp;#8217;t as hard as you might think.</description>
    </item>
    
    <item>
      <title>Build a Minimalist WYSIWYG HTML Editor With WYSIHTML5</title>
      <link>http://www.edzynda.com/build-a-minimalist-wysiwyg-html-editor-with-wysihtml5/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/build-a-minimalist-wysiwyg-html-editor-with-wysihtml5/</guid>
      <description>For a lot of HTML forms you really don&amp;rsquo;t need much more than the basic form fields that HTML provides. For some projects however you might need a little more. If you want your users to be able to add some styling, formatting or links you&amp;rsquo;re likely to use a third party editor like CKEditor or TinyMCE. Both of these are fine if you need all of the cool features they provide but sometimes those are overkill.</description>
    </item>
    
    <item>
      <title>My Personal Laravel Application Starter</title>
      <link>http://www.edzynda.com/my-personal-laravel-application-starter/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/my-personal-laravel-application-starter/</guid>
      <description>Frameworks make it easy to hit the ground running when writing web apps. The one hurdle I run into consistently when starting any app though is creating a base user authentication system. It&amp;rsquo;s pretty simple to do with most modern frameworks like Laravel but it&amp;rsquo;s also just an annoying boilerplate task. This is just one of many boilerplate tasks that I&amp;rsquo;ve decided to eliminate by creating a basic starter app that I can pull from GitHub and modify from there.</description>
    </item>
    
    <item>
      <title>Using Faker To Populate Your Laravel Projects During Development</title>
      <link>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</link>
      <pubDate>Fri, 20 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-faker-to-populate-your-laravel-projects-during-development/</guid>
      <description>I&amp;rsquo;m a very visual person so when I&amp;rsquo;m developing something, I like see and interact with my projects exactly how I would if it was in the production stage. The problem is, I don&amp;rsquo;t have a handful of test users on call to register on my test application and start using it. Laravel already has an easy way to populate your databases with users and other data but there&amp;rsquo;s still some manual data entry involved.</description>
    </item>
    
    <item>
      <title>Javascript Promises Explained</title>
      <link>http://www.edzynda.com/javascript-promises-explained/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/javascript-promises-explained/</guid>
      <description>While reading about different Javascript frameworks and utilities, I kept running across a design patter or technique called &amp;lsquo;promises&amp;rsquo;. It seems every shiny new Javascript thing utilizes them in some way or another. At first the concept seemed difficult to wrap my head around but eventually it clicked. It isn&amp;rsquo;t really as difficult as I thought.
Javascript as well as other modern languages uses a what are called callback functions. These are functions passed as arguments to other functions and are used to do something with the data that the top level function returns.</description>
    </item>
    
    <item>
      <title>Working With Queues Using PHP And Beanstalkd</title>
      <link>http://www.edzynda.com/working-with-queues-using-php-and-beanstalkd/</link>
      <pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/working-with-queues-using-php-and-beanstalkd/</guid>
      <description>PHP is often considered the glue of the Internet because it&amp;rsquo;s can be used for a lot of different things. There are so many built in functions and features that you are unlikely to use close to all of them if you work with PHP the rest of your life. This is great because we can solve various problems in our web apps without resorting to bringing in another language. Sometimes though, our application logic can get quite large or resource intensive.</description>
    </item>
    
    <item>
      <title>Create A Self-destructing, Encrypted Message App In Laravel Part 2</title>
      <link>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-2/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-2/</guid>
      <description>&lt;p&gt;The first thing we&amp;rsquo;ll need to do is create a default layout. This is the layout that the rest of our views will extend. Let&amp;rsquo;s save it as &amp;lsquo;app/views/layouts/default.blade.php&amp;rsquo;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create A Self-destructing, Encrypted Message App In Laravel Part 1</title>
      <link>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-1/</link>
      <pubDate>Fri, 15 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/create-a-self-destructing-encrypted-message-app-in-laravel-part-1/</guid>
      <description>The Internet is the wild west these days. With hackers, scammers and even governments gathering our personal communications, you may have become pretty paranoid about what you post online these days. In response to all this paranoia, there have been several offerings from online applications to SaaS services claiming to improve your security and protect your data online. I wouldn&amp;rsquo;t say that I fall into the paranoid category but security, anonymity and cryptography fascinate me.</description>
    </item>
    
    <item>
      <title>What Is A Microframework? Getting Started With Silex</title>
      <link>http://www.edzynda.com/what-is-a-microframework-getting-started-with-silex/</link>
      <pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/what-is-a-microframework-getting-started-with-silex/</guid>
      <description>There is no shortage of coding frameworks these days. I can&amp;rsquo;t scroll through my twitter and facebook feeds or my favorite dev forums without stumbling upon something new. Like a hungry barracuda, I&amp;rsquo;m instantly attracted to new shiny things. While browsing reddit.com/r/php I came across a mention of a microframework called Silex. Now you may be wondering what a microframework is. I was wondering the same thing, so I took a look at the project&amp;rsquo;s website to figure out for myself.</description>
    </item>
    
    <item>
      <title>Using The PHP Built-in Webserver</title>
      <link>http://www.edzynda.com/using-the-php-built-in-webserver/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-the-php-built-in-webserver/</guid>
      <description>For years Ruby and Python have been stealing the show with innovative features and functionality to help developers get their projects off the ground. PHP was left in the dust for quite a while. One simple but invaluable feature that PHP had been lacking was it&amp;rsquo;s own webserver. Since version 5.4 however, PHP developers can now enjoy this modern convenience.
Not all backend developers are system administrators. They know how to code and code well.</description>
    </item>
    
    <item>
      <title>The PHP Renaissance: FIG and PSRs</title>
      <link>http://www.edzynda.com/the-php-renaissance-fig-and-psrs/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/the-php-renaissance-fig-and-psrs/</guid>
      <description>If you worked with PHP in the early days or even if you are a newcomer, you are probably familiar with how messy and painful working with another developer&amp;#8217;s code can be. PHP has a low barrier to entry which is great for getting things done. At the same time though, it creates a culture of lazy developers. Even those developers with years of experience have coding styles that are hard to wade through.</description>
    </item>
    
    <item>
      <title>What Is An IoC Container?</title>
      <link>http://www.edzynda.com/what-is-an-ioc-container/</link>
      <pubDate>Wed, 06 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/what-is-an-ioc-container/</guid>
      <description>If you&amp;#8217;re discussing object oriented programming in PHP these days, it&amp;#8217;s likely that you&amp;#8217;ve at least heard about such topics as dependency injection or IoC containers. They&amp;#8217;re both pretty useful tools for coding and testing your code. What exactly is an IoC container though? It sounds pretty complicated but it&amp;#8217;s really not.
If you read my earlier post on using repositories in Laravel you might have noticed that when using dependency injection in our __construct method, we didn&amp;#8217;t have to actually instantiate our repository.</description>
    </item>
    
    <item>
      <title>Using Hooks In WordPress</title>
      <link>http://www.edzynda.com/using-hooks-in-wordpress/</link>
      <pubDate>Mon, 04 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-hooks-in-wordpress/</guid>
      <description>Every so often I have clients who want me to work on WordPress sites or plugins. I honestly hate working with WordPress. While it&amp;#8217;s one of the most popular CMS products in the world with a massive developer base, I find that anything coded for WordPress tends to follow a tacky and poorly organized form of coding. Coding styles vary wildly from developer to developer and there really is no standard.</description>
    </item>
    
    <item>
      <title>Using Repositories In Laravel</title>
      <link>http://www.edzynda.com/using-repositories-in-laravel/</link>
      <pubDate>Fri, 18 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-repositories-in-laravel/</guid>
      <description>The past couple of days I have been cramming my brain with coding knowledge. I&amp;#8217;m working on a side project that I&amp;#8217;ll likely announce in detail as it gets closer to launch. Since I&amp;#8217;m starting from an empty Laravel project and building it from the ground up, I&amp;#8217;m learning quite a bit about the framework and even some of the new features in PHP 5.4 and above.
One technique I&amp;#8217;m starting to better understand is that of dependency injection.</description>
    </item>
    
    <item>
      <title>Using Route/Model Binding In Laravel</title>
      <link>http://www.edzynda.com/using-routemodel-binding-in-laravel/</link>
      <pubDate>Mon, 14 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/using-routemodel-binding-in-laravel/</guid>
      <description>As I work more and more with Laravel, I keep running across some really cool time saving tricks. One of those time savers is route/model binding.
Let&amp;#8217;s say that you have the following route setup.
&amp;lt;?php Route::get(&#39;books/{book}&#39;, function($book) { return Book::find($book); });  That&amp;#8217;s pretty simple right? Basically you point your browser at /books and then pass a book id and then use the &amp;#8216;Book&amp;#8217; model to fetch that book from the database.</description>
    </item>
    
    <item>
      <title>Simple Image Manipulation With Intervention Image</title>
      <link>http://www.edzynda.com/simple-image-manipulation-with-intervention-image/</link>
      <pubDate>Fri, 27 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/simple-image-manipulation-with-intervention-image/</guid>
      <description>A lot of web applications include some sort of photo uploading functionality. Whether it&amp;#8217;s allowing a user to upload a personal avatar or to create and manage an entire photo gallery with watermarking features, it&amp;#8217;s somewhat of a pain to code. PHP includes several built-in functions for accomplishing this using the GD library but they&amp;#8217;re cumbersome at best. Luckily someone else feels your pain and has written a class that makes it a snap to work with images.</description>
    </item>
    
    <item>
      <title>Use Laravel&#39;s Eloquent ORM Outside Of Laravel</title>
      <link>http://www.edzynda.com/use-laravels-eloquent-orm-outside-of-laravel/</link>
      <pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/use-laravels-eloquent-orm-outside-of-laravel/</guid>
      <description>Working with databases in Laravel is ridiculously easy thanks to Eloquent. Eloquent allows you to map database tables as simple model objects that include various methods for retrieving and updating the database. While working on other people&amp;rsquo;s code, however, I&amp;rsquo;m usually not lucky enough to be working with something as enjoyable as Laravel. Thankfully Laravel is written in such a way that some of it&amp;rsquo;s key components can be used as stand-alone modules.</description>
    </item>
    
    <item>
      <title>Tip: Custom Scripts In WordPress</title>
      <link>http://www.edzynda.com/tip-custom-scripts-and-stylesheets-in-wordpress/</link>
      <pubDate>Wed, 18 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/tip-custom-scripts-and-stylesheets-in-wordpress/</guid>
      <description>WordPress is a great CMS (Content Management System) is you want to get a site up and running very quickly. It&amp;#8217;s themable and within the theming framework, WordPress includes the ability to include popular assets like JQuery. All it takes is a simple command.
&amp;lt;?php wp_enqueue_script(&#39;jquery&#39;);  What if you don&amp;#8217;t want to use the version of JQuery included in WordPress though? There are several reasons you would require a different version, compatibility for example.</description>
    </item>
    
    <item>
      <title>Getting Started With Laravel 4 and Vagrant</title>
      <link>http://www.edzynda.com/getting-started-with-laravel-4-and-vagrant/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/getting-started-with-laravel-4-and-vagrant/</guid>
      <description>I&amp;rsquo;ve worked with a handful of different PHP frameworks over the years. From ZEND Framework to Codeigniter, all have their pros and cons. Some of them are more difficult to work with than others. None of them, however, have been more enjoyable for me to work with than Laravel.
I came across Laravel while randomly browsing the web. I don&amp;rsquo;t even remember what I was looking for but after reading more about Laravel and how simple it was to setup, I was hooked.</description>
    </item>
    
    <item>
      <title>3 Reasons To Use Nginx Instead Of Apache</title>
      <link>http://www.edzynda.com/3-reasons-to-use-nginx-instead-of-apache/</link>
      <pubDate>Fri, 16 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/3-reasons-to-use-nginx-instead-of-apache/</guid>
      <description>If you&amp;#8217;ve been working with the web for the past decade, you&amp;#8217;re probably familiar with Apache web server. Apache has long been a pillar of the world wide web. It&amp;#8217;s free, functional and very modular. I&amp;#8217;ve been using Apache for years as it&amp;#8217;s the default on many hosting solutions.
As great as Apache is, it&amp;#8217;s not a one size fits all solution. In fact it may even be overkill for some projects.</description>
    </item>
    
    <item>
      <title>Tip: Quick Test For XSS Vulnerabilities</title>
      <link>http://www.edzynda.com/testing-for-xss-vulnerabilities/</link>
      <pubDate>Mon, 29 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/testing-for-xss-vulnerabilities/</guid>
      <description>There are a lot of things to keep in mind when it comes to web development. Security should be at the top of your list. If you read up on web application security, you&amp;#8217;re probably familiar with cross-site scripting or XSS attacks. XSS attacks can cause serious damage but are really simple to prevent.
If you aren&amp;#8217;t familiar, a XSS vulnerability occurs when your application takes user data and then sends it to the web browser without proper validation.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.edzynda.com/thanks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/thanks/</guid>
      <description>Thanks for signing up!
Return to main page</description>
    </item>
    
  </channel>
</rss>