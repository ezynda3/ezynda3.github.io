<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mocking on Ed Zynda - Coder, Hacker, Superhero</title>
    <link>http://www.edzynda.com/tags/mocking/</link>
    <description>Recent content in Mocking on Ed Zynda - Coder, Hacker, Superhero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2016 Ed Zynda.</copyright>
    <lastBuildDate>Tue, 26 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.edzynda.com/tags/mocking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test The Untestable With AspectMock</title>
      <link>http://www.edzynda.com/test-the-untestable-with-aspectmock/</link>
      <pubDate>Tue, 26 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.edzynda.com/test-the-untestable-with-aspectmock/</guid>
      <description>Some of us have had the pleasure of working with someone else&amp;rsquo;s ancient codebase to either add new features or fix bugs. It&amp;rsquo;s never fun and usually a pain. Because of the design (or lack thereof) of the application, it doesn&amp;rsquo;t lend itself to unit testing. The code is littered with static method calls, objects instantiated inside methods rather than being injected through a constructor, and other elements of poor design.</description>
    </item>
    
  </channel>
</rss>